---
const { toc, depth = 1, ...props } = Astro.props
const headings = toc.filter((it) => it.depth === depth)
---

<ul class={depth > 1 ? "pb-2 space-y-3" : ""}>
  {
    headings.map((it, idx) => {
      const nextHeading = headings[idx + 1];
      const subHeadings = toc.slice(
        (toc as any).indexOf(it) + 1,
        nextHeading ? (toc as any).indexOf(nextHeading) : undefined
      );
      return (
        depth == 1 ?
        (
          <li class="group">
            <a href={"#" + it.slug} class="block font-medium pb-2 text-slate-600 text-sm dark:text-slate-400 dark:group-[.section-active]:text-indigo-400 dark:hover:text-slate-100 group-[.section-active]:text-indigo-600 hover:text-slate-900">{it.text}</a>
            {subHeadings.length > 0 ? <Astro.self toc={subHeadings} depth={it.depth + 1} {...props}/> : null}
          </li>
        ) :
        (
          <li class="group">
            <a href={"#" + it.slug} class="flex group items-center pl-4 text-slate-600 text-sm dark:text-slate-400 dark:group-[.active]:text-indigo-400 dark:hover:text-slate-100 group-[.active]:text-indigo-600 hover:text-slate-900">
              <i class="fa-regular fa-angle-right mr-2 text-xs"></i>
              {it.text}
            </a>
          </li>
        )
      )
    })
  }
</ul>
